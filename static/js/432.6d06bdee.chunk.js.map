{"version":3,"file":"static/js/432.6d06bdee.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/AuthForm/AuthForm.module.css?9658","webpack://goit-react-hw-08-phonebook/./src/components/Footer/Footer.module.css?bcd4","components/Footer/Footer.js","components/AuthForm/AuthForm.js","pages/LoginPages.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"AuthForm_form__N+Fyz\",\"form__label\":\"AuthForm_form__label__6+5CG\",\"form__input\":\"AuthForm_form__input__-pRPe\",\"form__btn\":\"AuthForm_form__btn__DvAWu\",\"input__thumb\":\"AuthForm_input__thumb__QIBPT\",\"input__text\":\"AuthForm_input__text__TZ6V+\",\"input__help\":\"AuthForm_input__help__Oqs5r\",\"form__img\":\"AuthForm_form__img__BFWpl\"};","// extracted by mini-css-extract-plugin\nexport default {\"footer__data\":\"Footer_footer__data__adv1k\",\"footer__icon\":\"Footer_footer__icon__hi-9-\"};","import {BsGithub} from 'react-icons/bs';\nimport css from './Footer.module.css';\n\nexport default function Footer() {\n  return (\n    <footer className={css.footer}>\n      <div className={css.footer__data}>\n        Â© 2022 | All Rights Reserved | Developed by\n          <a\n            target='_blank'\n            rel='noopener noreferrer'\n            href='https://github.com/HryhoriiAndriiets1974'\n          >\n            <BsGithub className={css.footer__icon} />\n          </a>\n      </div>\n    </footer>\n  )\n}\n","import  PropTypes from \"prop-types\";\nimport { Formik, Form, Field } from \"formik\";\nimport { Typography, Box } from \"@mui/material\";\nimport IconButton from \"@mui/material/IconButton\";\n// import Button from \"@mui/material/Button\";\nimport VisibilityTwoToneIcon from '@mui/icons-material/VisibilityTwoTone';\nimport VisibilityOffTwoToneIcon from '@mui/icons-material/VisibilityOffTwoTone';\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport css from './AuthForm.module.css';\nimport { login, register } from \"redux/auth/authOperations\";\nimport Footer from \"components/Footer\";\n\n\nconst validateName = value => {\n  let error;\n  if (!value) {\n    error = 'Required';\n  } else if (/^[A-Za-z]+$/.test(value)) {\n    error = 'Invalid name';\n  }\n  return error;\n};\n\nfunction validateEmail(value) {\n  let error;\n  if (!value) {\n    error = 'Required';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n    error = 'Invalid email address';\n  }\n  return error;\n}\n\nconst validatePassword = value => {\n  let error;\n  if (!value) {\n    error = 'Required';\n  }\n  if (value.length < 7) {\n    error = 'Password to short';\n  }\n  return error;\n};\n\n// function validateUsername(value) {\n//   let error;\n//   if (value === 'admin') {\n//     error = 'Nice try!';\n//   }\n//   return error;\n// }\n\nexport const AuthForm = ({title}) => {\n  const dispatch = useDispatch();\n  const [value, setValue] = useState({showPassword: false,});\n\n    const handlePassword = () => {\n    setValue({\n      ...value,\n      showPassword: !value.showPassword,\n    });\n  };\n\n  const handleSubmit = (name, email, password) => {\n    title === 'Register'\n      ? dispatch(register({name, email, password}))\n      : dispatch(login({email,password}));\n  };\n\n  return (\n    <div className={css.form}>\n      <Box\n        display='flex'\n        flexDirection='column'\n        justifyContent='center'\n        alignItems='center'\n      >\n        <Typography\n          variant=\"h2\"\n          style={{\n            fontWeight: 'bold',\n            lineHeight: '1.2',\n            fontSize: '40px',\n            margin: '40px',\n            color: 'var(--accent-color)',\n            // backgroundColor: '#000',\n            backgroundColor:' hsl(192, 74%, 70%,0.5)',\n            boxShadow:' 0 0 10px 1px hsl(192, 74%, 70%)',\n          }}\n        >\n          {title}\n        </Typography>\n        <Formik\n          initialValues={{\n            email: '',\n            password: '',\n            name: '',\n            showPassword: false,\n          }}\n          onSubmit={(values, {resetForm}) => {\n            handleSubmit(values.name, values.email, values.password);\n            resetForm();\n          }}\n          >\n            {({errors, touched, values}) => {\n                const password = values.password.length >= 7;\n\n                return (\n                  <Form>\n                    {title === 'Register'\n                        ? (\n                          <Box className={css.input__thumb}>\n                            <Typography\n                              variant=\"caption\"\n                              fontSize=\"14px\"\n                              className={css.input__text}>\n                                Name\n                            </Typography>\n                            <Field\n                              className={css.form__input}\n                              name=\"name\"\n                              type=\"text\"\n                              validate={validateName}\n                            />\n                            {errors.name && touched.name && (\n                              <Typography\n                                variant=\"subtitle1\"\n                                className={css.input__help}\n                              >\n                                {errors.name}\n                              </Typography>\n                            )}\n                          </Box>)\n                        : null}\n                    <Box className={css.input__thumb}>\n                      <Typography\n                        variant=\"caption\"\n                        fontSize=\"14px\"\n                        className={css.input__text}>\n                          Email\n                      </Typography>\n                      <Field\n                        className={css.form__input}\n                        name=\"email\"\n                        type=\"email\"\n                        validate={validateEmail}\n                      />\n                      {errors.email && touched.email && (\n                        <Typography\n                          variant=\"subtitle1\"\n                          className={css.input__help}\n                        >\n                          {errors.email}\n                        </Typography>\n                      )}\n                    </Box>\n                    <Box className={css.input__thumb}>\n                      <Typography\n                        variant=\"caption\"\n                        fontSize=\"14px\"\n                        className={css.input__text}>\n                        Password\n                      </Typography>\n                      <Field\n                        className={css.form__input}\n                        type={value.showPassword ? 'text' : 'password'}\n                        name=\"password\"\n                        validate={validatePassword}\n                      />\n                      <IconButton\n                        style={{\n                          width: '24px',\n                          height: '24px',\n                          position: 'absolute',\n                          top: '7px',\n                          right: '-67px',\n                        }}\n                        size=\"small\"\n                        type=\"button\"\n                        onClick={handlePassword}\n                      >\n                        {value.showPassword\n                          ? <VisibilityTwoToneIcon />\n                          : <VisibilityOffTwoToneIcon />}\n                      </IconButton>\n                      {errors.password && touched.password && (\n                        <Typography\n                          variant=\"subtitle1\"\n                          className={css.input__help}\n                        >\n                          {errors.password}\n                        </Typography>\n                      )}\n                    </Box>\n\n                    {/* <Button\n                      className={css.form__btn}\n                      fullWidth={true}\n                      // color=\"primary\"\n                      type=\"submit\"\n                      disabled={!!errors.email || !password}\n                    >\n                      {title === 'Register' ? 'Register' : 'Login'}\n                    </Button> */}\n                    <button\n                      className={css.form__btn}\n                      disabled={!!errors.email || !password}>\n                      {title === 'Register' ? 'Register' : 'Login'}\n                    </button>\n                    <div className={css.form__img}>\n\n                    </div>\n                  </Form>\n                );\n              }\n            }\n          </Formik>\n      </Box>\n      <Footer />\n    </div>\n  )\n};\n\nAuthForm.propTypes = {\n  title: PropTypes.string.isRequired,\n}\n","import { AuthForm } from \"components/AuthForm/AuthForm\";\n\nconst LoginPages = () => <AuthForm title={'Login'}/>;\nexport default LoginPages;\n"],"names":["Footer","className","css","target","rel","href","validateName","value","error","test","validateEmail","validatePassword","length","AuthForm","title","dispatch","useDispatch","useState","showPassword","setValue","handlePassword","Box","display","flexDirection","justifyContent","alignItems","Typography","variant","style","fontWeight","lineHeight","fontSize","margin","color","backgroundColor","boxShadow","initialValues","email","password","name","onSubmit","values","resetForm","register","login","errors","touched","type","validate","IconButton","width","height","position","top","right","size","onClick","VisibilityTwoTone","VisibilityOffTwoTone","disabled"],"sourceRoot":""}